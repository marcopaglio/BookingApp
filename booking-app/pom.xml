<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.github.marcopaglio</groupId>
    <artifactId>booking-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../booking-parent</relativePath>
  </parent>
  <artifactId>booking-app</artifactId>
  
  <name>BookingApp - Application</name>
  <description>
    The application itself that contains everything you need to start a new instance of BookingApp.
  </description>
  
  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>booking-ui-module</artifactId>
      <!-- version taken from the bom -->
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <!-- version taken from the bom -->
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-sync</artifactId>
      <!-- version taken from the bom -->
    </dependency>
    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-core</artifactId>
      <!-- version taken from the bom -->
    </dependency>
    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-hikaricp</artifactId>
      <!-- version taken from the bom -->
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <!-- version taken from the bom -->
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <!-- version taken from the bom -->
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-swing-junit</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <!-- version taken from the bom -->
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <descriptorRefs>
                  <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
                <archive>
                  <manifest>
                    <mainClass>io.github.marcopaglio.booking.app.swing.BookingSwingApp</mainClass>
                  </manifest>
                </archive>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <!-- version taken from the parent -->
          <executions>
            <execution>
              <id>run-jar-with-dependencies</id>
              <phase>verify</phase>
              <goals>
                <goal>exec</goal>
              </goals>
              <configuration>
                <executable>java</executable>
                <arguments>
                  <argument>-jar</argument>
                  <argument>${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar</argument>
                </arguments>
                <async>true</async>
                <asyncDestroyOnShutdown>true</asyncDestroyOnShutdown>
              </configuration>
            </execution>
          </executions>
        </plugin>
        
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>**/app/*</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <!-- version taken from the bom -->
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <!-- version taken from the parent -->
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <!-- version taken from the parent -->
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <!-- version taken from the parent -->
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <!-- version taken from the parent -->
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.coverage.exclusions>
          **/app/swing/*.*
        </sonar.coverage.exclusions>
        
        <sonar.issue.ignore.multicriteria>e1</sonar.issue.ignore.multicriteria>
        <!-- Rule: "Test classes should comply with a naming convention"  -->
        <!-- SonarQube considers only Test and IT as suffixes for tests, not E2E -->
        <sonar.issue.ignore.multicriteria.e1.ruleKey>java:S3577</sonar.issue.ignore.multicriteria.e1.ruleKey>
        <sonar.issue.ignore.multicriteria.e1.resourceKey>**/*E2E.java</sonar.issue.ignore.multicriteria.e1.resourceKey>
      </properties>
    </profile>
  </profiles>
</project>