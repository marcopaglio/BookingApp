<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.github.marcopaglio</groupId>
    <artifactId>booking-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>booking-app</artifactId>
  
  <name>BookingApp - Application</name>
  <description>
    The application itself that contains everything you need to start a new instance of BookingApp.
  </description>
  
  <dependencies>
    <dependency>
      <groupId>io.github.marcopaglio</groupId>
      <artifactId>booking-ui-module</artifactId>
      <!-- version taken from the bom -->
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <!-- version taken from the bom -->
    </dependency>

    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-hikaricp</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-swing-junit</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <!-- version taken from the parent -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>4.7.5</version>
    </dependency>
  </dependencies>
  
  <build>
    <pluginManagement>
      <plugins>
        
      </plugins>
    </pluginManagement>
    
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <!-- version taken from the parent -->
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <!-- version taken from the bom -->
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <!-- version taken from the parent -->
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.coverage.exclusions>
          <!-- HERE SOME EXCLUSIONS -->
        </sonar.coverage.exclusions>
        
        <sonar.issue.ignore.multicriteria>e1</sonar.issue.ignore.multicriteria>
        <!-- Rule: "Test classes should comply with a naming convention"  -->
        <!-- SonarQube considers only Test and IT as suffixes for tests, not E2E -->
        <sonar.issue.ignore.multicriteria.e1.ruleKey>java:S3577</sonar.issue.ignore.multicriteria.e1.ruleKey>
        <sonar.issue.ignore.multicriteria.e1.resourceKey>**/*E2E.java</sonar.issue.ignore.multicriteria.e1.resourceKey>
      </properties>
    </profile>
  </profiles>
</project>