# This workflow will build a Java project with Maven
name: Java CI with Maven and SonarCloud in Linux

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      workdir: booking-aggregator
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Shallow clones should be disabled for a better relevancy of SonarQube analysis
        fetch-depth: 0

    # SonarCloud requires at least Java 11
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-

    - name: Enable X
      run: |
        Xvfb :99 -ac -screen 0 1024x768x24 &
        export DISPLAY=:99
        printenv
        echo "DISPLAY=$DISPLAY" >> "$GITHUB_ENV"

    - name: Build with Maven Wrapper and SonarCloud
      id: maven-build
      run: |
        printenv
        ../mvnw install -Pdocker -Ddisplay=$DISPLAY
      # --server-num=99 (or -n 99) as default
      # --server-args="-ac" (or -s "-ac") needed for allowing access of Xvfb from docker containers
      working-directory: ${{ env.workdir }}
