# This workflow will build a Java project with Maven
name: Java CI with Maven and SonarCloud in Linux

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      workdir: booking-aggregator
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Shallow clones should be disabled for a better relevancy of SonarQube analysis
        fetch-depth: 0

    # SonarCloud requires at least Java 11
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2
          ~/.sonar/cache
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-

    - name: Build with Maven Wrapper and SonarCloud
      run: xvfb-run ../mvnw install -Pcoveralls $ADDITIONAL_COVERALLS_ARGS -Ppitest -Psonar $ADDITIONAL_SONAR_ARGS -DpullRequest=PR_NUMBER
      working-directory: ${{ env.workdir }}
      env:
        ADDITIONAL_COVERALLS_ARGS: -DrepoToken=${{ secrets.COVERALLS_TOKEN }}
        ADDITIONAL_SONAR_ARGS: -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=marcopaglio -Dsonar.projectKey=marcopaglio_BookingApp
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}

    - name: Generate JUnit Report
      id: test-report
      if: ${{ failure() }}
      run: ../mvnw surefire-report:report-only surefire-report:failsafe-report-only site:site -DgenerateReports=false -Daggregate=true
      working-directory: ${{ env.workdir }}

    - name: Archive JUnit Report
      if: ${{ failure() && steps.test-report.outcome == 'success' }}
      uses: actions/upload-artifact@v3
      with:
        name: surefire-report-jdk-11
        path: ${{ env.workdir }}/target/site/
        if-no-files-found: error
        retention-days: 30

    - name: Archive failed GUI tests screenshots
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: failed-gui-tests-screenshots
        path: '**/failed-gui-tests/'
        if-no-files-found: ignore
        retention-days: 30

    - name: Generate Pitest Report
      id: pitest-report
      if: ${{ failure() }}
      run: ../mvnw org.pitest:pitest-maven:report-aggregate-module
      working-directory: ${{ env.workdir }}

    - name: Archive Pitest Report
      if: ${{ failure() && steps.pitest-report.outcome == 'success' }}
      uses: actions/upload-artifact@v3
      with:
        name: pitest-report-jdk-11
        path: '**/target/pit-reports/'
        if-no-files-found: error
        retention-days: 30
